"""Indicates a Bean Validation constraint"""
directive @constraint(format: String, max: BigInteger, maxFloat: BigDecimal, maxLength: Int, min: BigInteger, minFloat: BigDecimal, minLength: Int, pattern: String) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

type Account implements HasPicture {
  balance: BigInteger

  """ISO-8601"""
  createdAt: DateTime

  """ISO-8601"""
  deletedAt: DateTime
  email: String
  extId: String
  id: BigInteger
  name: String
  picture: String
}

input AccountInput {
  balance: BigInteger

  """ISO-8601"""
  createdAt: DateTime

  """ISO-8601"""
  deletedAt: DateTime
  email: String
  extId: String
  id: BigInteger
  name: String
  picture: String
}

"""Scalar for BigDecimal"""
scalar BigDecimal

"""Scalar for BigInteger"""
scalar BigInteger

input ColumnPojoInput {
  direction: DirectionPojo
  name: String
}

"""Scalar for DateTime"""
scalar DateTime

enum DirectionPojo {
  Ascending
  Descending
}

interface HasPicture {
  id: BigInteger
  picture: String
}

"""Mutation root"""
type Mutation {
  """Create Product"""
  createProduct(product: ProductInput): Product

  """Delete Account"""
  deleteAccount(id: BigInteger): Boolean

  """Delete Product"""
  deleteProduct(id: BigInteger): Boolean

  """Erase an Account permanently"""
  eraseAccount(id: BigInteger): Boolean

  """Make Purchase"""
  makePurchase(productId: BigInteger): Purchase

  """Set new PIN"""
  pin(pin: String): Boolean

  """Refund Purchase"""
  refundPurchase(id: BigInteger): Boolean

  """Sign up with OIDC provider token and PIN"""
  signUp(pin: String): Account

  """Update Account"""
  updateAccount(account: AccountInput): Account

  """Update Product"""
  updateProduct(product: ProductInput): Product
}

input PagePojoInput {
  index: Int
  size: Int
}

type PaginationResponse_Account {
  data: [Account]
  page: Int!
  total: BigInteger!
}

type PaginationResponse_Product {
  data: [Product]
  page: Int!
  total: BigInteger!
}

type PaginationResponse_Purchase {
  data: [Purchase]
  page: Int!
  total: BigInteger!
}

input PinLoginInput {
  id: BigInteger
  pin: String
}

type Product implements HasPicture {
  bundleSize: Int

  """ISO-8601"""
  createdAt: DateTime

  """ISO-8601"""
  deletedAt: DateTime
  id: BigInteger
  name: String
  picture: String
  price: Int
  type: ProductType
}

input ProductInput {
  bundleSize: Int

  """ISO-8601"""
  createdAt: DateTime

  """ISO-8601"""
  deletedAt: DateTime
  id: BigInteger
  name: String
  picture: String
  price: Int
  type: ProductType
}

enum ProductType {
  COLD_DRINK
  HOT_DRINK
}

type Purchase {
  account: Account

  """ISO-8601"""
  createdAt: DateTime

  """ISO-8601"""
  deletedAt: DateTime
  id: BigInteger
  paidPrice: Int
  product: Product
}

"""Query root"""
type Query {
  """Get Account by ID"""
  account(id: BigInteger): Account

  """Get all Accounts"""
  accounts(page: PagePojoInput, sort: SortPojoInput): PaginationResponse_Account

  """Get deleted Accounts"""
  deletedAccounts(page: PagePojoInput, sort: SortPojoInput): PaginationResponse_Account

  """Get personal Purchases"""
  myPurchases(page: PagePojoInput, sort: SortPojoInput): PaginationResponse_Purchase

  """Login with PIN"""
  pinLogin(login: PinLoginInput): String

  """Get Product by ID"""
  product(id: BigInteger): Product

  """Get all Products"""
  products(page: PagePojoInput, sort: SortPojoInput): PaginationResponse_Product

  """Get Purchase by ID"""
  purchase(id: BigInteger): Purchase

  """Get all Purchases"""
  purchases(page: PagePojoInput, sort: SortPojoInput): PaginationResponse_Purchase
}

input SortPojoInput {
  columns: [ColumnPojoInput]
}
